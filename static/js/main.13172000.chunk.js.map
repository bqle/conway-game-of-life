{"version":3,"sources":["index.js"],"names":["Square","className","style","backgroundColor","this","props","value","transition","WebkitTransition","MozTransition","onClick","React","Component","Board","pair","i","board","classname","map","singleRow","singleCol","renderSquare","sleep","ms","Promise","resolve","setTimeout","Game","defaultBoard","Array","fill","length","j","isRunning","genSpeed","state","stepNumber","history","row_index","Math","floor","col_index","updatedBoard","slice","setState","console","log","m","n","JSON","parse","stringify","hasChanged","cnt","updatedHistory","push","a","prevHistory","nextGen","speed","step","currentBoard","moves","index","desc","jumpTo","startGame","endGame","reset","font","setSpeed","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13172000.chunk.js","sourcesContent":["import { findByLabelText } from '@testing-library/dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst m = 20;\nconst n = 20;\n\nclass Square extends React.Component {\nrender() {\nreturn (\n    <button className=\"square\" \n        style={{backgroundColor: this.props.value ? '#c37979' : '#ffffff',\n                transition: \"all .4s ease\",\n                WebkitTransition: \"all .4s ease\",\n                MozTransition: \"all .4s ease\"}} \n        onClick={this.props.onClick} >\n        {\n        // this.props.value ? \"1\" : \"0\"\n        }\n    </button>\n);\n}\n}\n\nclass Board extends React.Component {\nrenderSquare(pair) {\n    return (\n    <Square\n        value={pair.value}\n        onClick={() => this.props.onClick(pair.i)}\n    />\n    );\n}\n\nrender() {\n    let board = this.props.board;\n    \n    return (\n    <div classname=\"board\">\n        {\n            board.map((singleRow) => {return (<div className=\"board-row\">\n                {singleRow.map(singleCol => {\n                    return this.renderSquare(singleCol);\n                })}\n                \n            </div>)})\n        }\n    </div>\n    );\n}\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n  \n\nclass Game extends React.Component {\nconstructor(props) {\n    super(props);\n    var cnt = 0;\n    let defaultBoard = Array(m).fill(null).map(() => (Array(n)));\n    for (let i = 0 ; i < defaultBoard.length; i++) {\n        for (let j = 0; j < defaultBoard[0].length; j++) {\n            defaultBoard[i][j] = {i: i * n + j, value: false};\n            cnt++;\n        }\n    }\n    let history = [];\n    this.isRunning = false;\n    this.genSpeed = 1;\n    this.state = {\n        board: defaultBoard,\n        stepNumber: 0,\n        history: [defaultBoard],\n    };\n}\n\nhandleClick(i) {\n    if (this.isRunning) {return;}\n    var row_index = Math.floor(i/m);\n    var col_index = i% n;\n    let updatedBoard = this.state.board.slice();\n    updatedBoard[row_index][col_index] = {i: i, value: !this.state.board[row_index][col_index].value};\n    this.setState({\n        board: updatedBoard,\n    })\n}\n\nnextGen() {\n    console.log(\"next gened\");\n    var m = this.state.board.length;\n    var n = this.state.board[0].length;\n    \n    let updatedBoard = JSON.parse(JSON.stringify(this.state.board));\n\n    let hasChanged = false;\n    for (let i = 0 ; i < m; i++) {\n        for (let j = 0 ; j < n; j++) {\n            let cnt = 0;\n            if (i - 1 >= 0 && j-1 >= 0 && this.state.board[i-1][j-1].value) {cnt++;}\n            if (i - 1 >= 0 && this.state.board[i-1][j].value) {cnt++;}\n            if (i - 1 >= 0 && j+1 < n && this.state.board[i-1][j+1].value) {cnt++;}\n            if (j - 1 >= 0 && this.state.board[i][j-1].value) {cnt++;}\n            if (j + 1 < n && this.state.board[i][j+1].value) {cnt++;}\n            if (i + 1 < m && j-1 >= 0 && this.state.board[i+1][j-1].value) {cnt++;}\n            if (i + 1 < m && this.state.board[i+1][j].value) {cnt++;}\n            if (i + 1 < m && j+1 < n && this.state.board[i+1][j+1].value) {cnt++;}\n            \n            if (cnt < 2) {\n                updatedBoard[i][j] = {i: this.state.board[i][j].i, value: false};\n            } else if (cnt == 2) {\n                updatedBoard[i][j] = {i: this.state.board[i][j].i, value: this.state.board[i][j].value};\n            } else if (cnt == 3) {\n                updatedBoard[i][j] = {i: this.state.board[i][j].i, value: true};\n            } else {\n                updatedBoard[i][j] = {i: this.state.board[i][j].i, value: false};\n            }\n\n            if (updatedBoard[i][j].value != this.state.board[i][j].value) {\n                hasChanged = true;\n            }\n        }\n    }\n    \n    let updatedHistory = this.state.history.slice(0, this.state.stepNumber + 1);\n    updatedHistory.push(updatedBoard);\n    this.setState({\n        board: updatedBoard,\n        history: updatedHistory,\n        stepNumber: this.state.stepNumber + 1,\n    })\n    if (!hasChanged) {\n        this.isRunning = false;\n    }\n}\n\nreset() {\n    console.log(\"Reset\");\n    var cnt = 0;\n    let defaultBoard = Array(m).fill(null).map(() => (Array(n)));\n    for (let i = 0 ; i < defaultBoard.length; i++) {\n        for (let j = 0; j < defaultBoard[0].length; j++) {\n            defaultBoard[i][j] = {i: cnt, value: false};\n            cnt++;\n        }\n    }\n    let history = [];\n    this.isRunning = false;\n    this.setState({\n        board: defaultBoard,\n        stepNumber: 0,\n        history: [defaultBoard],\n    });\n}\n\nendGame() { \n   this.isRunning = false;\n}\n\nasync startGame() {\n    if (this.isRunning) {return;}\n    this.isRunning = true;\n    let prevHistory = this.state.history.slice(0, this.state.stepNumber + 1);\n    this.setState({\n        history: prevHistory,\n    })\n\n    while (this.isRunning) {\n        this.nextGen();\n        await sleep(this.genSpeed * 1000);\n    }\n}\n\nsetSpeed(speed) {\n    this.genSpeed = speed;\n}\n\njumpTo(step) {\n    let currentBoard = this.state.history[step];\n    this.setState({\n        stepNumber: step,\n        board: currentBoard,\n    });\n}\n\nrender() {\n    const moves = this.state.history.map((board, index) => {\n        const desc = 'Go to generation #' + index;\n        return (\n            <li>\n                <button onClick = {() => this.jumpTo(index)}>{desc}</button> \n            </li>\n        );\n    });\n\n\n    return (\n    <div className=\"game\">\n        <div className=\"game-info\">\n            <div >Conway's Game of Life</div>\n            <div>\n                <button onClick={() => this.startGame()}>Start</button>\n                <button onClick={() => this.endGame()}>End</button>\n                <button onClick={() => this.reset()}>Reset</button>\n            </div>\n            <br></br>\n            <div>\n                <div style={{font: '12px'}}>Speed</div>\n                <button onClick={() => this.setSpeed(2)}>Slow</button>\n                <button onClick={() => this.setSpeed(1)}>Medium</button>\n                <button onClick={() => this.setSpeed(0.5)}>Fast</button>\n            </div>\n            <ol>{moves}</ol>\n        </div>\n        <div className=\"game-board\">\n        <Board\n            board={this.state.board}\n            onClick={(i) => this.handleClick(i)}\n        />\n        </div>\n    </div>\n    );\n}\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}